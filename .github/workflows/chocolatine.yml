name: chocolatine

on:
  push:
    branches-ignore:
      -ga-ignore-*
    pull-request:
      branches-ignore:
        -ga-ignore-*

jobs:
  check_repository_cleanliness:
    runs-on: ubuntu-latest
    steps:
      count_error=0
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: .gcda
        run: |
          FILE=$(find . -name *.gcda)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .o
        run: |
          FILE=$(find . -name *.o)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .a
        run: |
          FILE=$(find . -name *.a)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .gcno
        run: |
          FILE=$(find . -name *.gcno)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .so
        run: |
          FILE=$(find . -name *.so)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .gcov
        run: |
          FILE=$(find . -name *.gcov)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .-
        run: |
          FILE=$(find . -name *-)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: .#
        run: |
          FILE=$(find . -name "\#*\#")
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: pain_au_chocolat
        run: |
          FILE=$(find . -name *pain_au_chocolat*)
          if [[ -n "$FILE" ]]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=Unwanted file detected::$FILE"
          count_error = 1
          fi
      - name: count
        run: |
          if [ count == 1]; then
          echo "::error file=$FILE,line=1,col=5,endColumn=7,title=checks if the repository is clean and void of any unwanted files (temp files, binary files, etc.)::$FILE"
          count_error = 1
          fi
  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: make
      - run: make fclean
      - run: |
          IFS=','
          exit_status=0
          for file in ${EXECUTABLES}
          do
              if [ -x "$file" ]; then
                  if [ ! -d "$file" ]; then
                      echo "File '$file' is executable"
                  else
                      echo "File '$file' is directory"
                      exit_status=84
                  fi
              else
                  echo "File '$file' is not executable"
                  exit_status=84 
              fi
          done
          exit $exit_status
  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: make tests_run
  push_to_mirror:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:EpitechPromo2026/B-DOP-200-PAR-2-1-chocolatine-taha.alani.git
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
